name: wbs-deploy

services:
  # --------------------------------------------------
  # A. CORE WIKIBASE SUITE SERVICES
  # --------------------------------------------------

  wikibase:
    image: wikibase/wikibase:3
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wikibase.rule=Host(`localhost`) || Host(`wikibase.localhost`)"
      - "traefik.http.routers.wikibase.entrypoints=web"
      - "traefik.http.services.wikibase.loadbalancer.server.port=80"
    volumes:
      - ./config:/config
      - wikibase-image-data:/var/www/html/images
      - quickstatements-data:/quickstatements/data
    env_file:
      - ./wikibase_test.env
    environment:
      MW_WG_SERVER: http://localhost
      DB_SERVER: mysql:3306
      ELASTICSEARCH_HOST: elasticsearch
      QUICKSTATEMENTS_PUBLIC_URL: http://localhost/quickstatements
    healthcheck:
      test: curl --silent --fail localhost/wiki/Main_Page
      interval: 10s
      start_period: 5m

  wikibase-jobrunner:
    image: wikibase/wikibase:3
    command: /jobrunner-entrypoint.sh
    depends_on:
      wikibase:
        condition: service_healthy
    restart: unless-stopped
    volumes_from:
      - wikibase

  mysql:
    image: mariadb:10.11
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    env_file:
      - ./wikibase_test.env
    environment:
      MYSQL_ROOT_PASSWORD: test
    healthcheck:
      test: healthcheck.sh --connect --innodb_initialized
      start_period: 1m
      interval: 20s
      timeout: 5s

  # --------------------------------------------------
  # B. EXTRA WIKIBASE SUITE SERVICES
  # --------------------------------------------------

  # To disable Elasticsearch and use default MediaWiki search functionality remove
  # the elasticsearch service, and the MW_ELASTIC_* vars from wikibase_variables
  # at the top of this file.
  elasticsearch:
    image: wikibase/elasticsearch:1
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true
    healthcheck:
      test: curl --silent --fail localhost:9200
      interval: 10s
      start_period: 2m

  wdqs:
    image: wikibase/wdqs:2
    command: /runBlazegraph.sh
    depends_on:
      wikibase:
        condition: service_healthy
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    volumes:
      - wdqs-data:/wdqs/data
    healthcheck:
      test: curl --silent --fail localhost:9999/bigdata/namespace/wdq/sparql
      interval: 10s
      start_period: 2m

  wdqs-updater:
    image: wikibase/wdqs:2
    command: /runUpdate.sh
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    environment:
      WIKIBASE_CONCEPT_URI: http://wikibase.localhost

  wdqs-proxy:
    image: wikibase/wdqs-proxy:1
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped

  wdqs-frontend:
    image: wikibase/wdqs-frontend:1
    depends_on:
      - wdqs-proxy
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wdqs-frontend.rule=Host(`localhost`) && PathPrefix(`/query`) || Host(`wdqs-frontend.localhost`)"
      - "traefik.http.routers.wdqs-frontend.entrypoints=web"
      - "traefik.http.services.wdqs-frontend.loadbalancer.server.port=80"
    environment:
      WDQS_HOST: wdqs-proxy
    healthcheck:
      test: curl --silent --fail localhost
      interval: 10s
      start_period: 2m

  quickstatements:
    image: wikibase/quickstatements:1
    depends_on:
      wikibase:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - quickstatements-data:/quickstatements/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.quickstatements.rule=Host(`localhost`) && PathPrefix(`/quickstatements`) || Host(`quickstatements.localhost`)"
      - "traefik.http.routers.quickstatements.entrypoints=web"
      - "traefik.http.services.quickstatements.loadbalancer.server.port=80"
    environment:
      QUICKSTATEMENTS_PUBLIC_URL: http://localhost/quickstatements
      WIKIBASE_PUBLIC_URL: http://localhost
    healthcheck:
      test: curl --silent --fail localhost
      interval: 10s
      start_period: 2m

  # --------------------------------------------------
  # C. REVERSE PROXY AND SSL SERVICES
  # --------------------------------------------------

  traefik:
    image: traefik:3.1
    command:
      # Basic setup
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # http endpoint
      - "--entrypoints.web.address=:80"
      # Enable Traefik dashboard
      - "--api.insecure=true"
      - "--api.dashboard=true"
    restart: unless-stopped
    ports:
      - 80:80
      - 8080:8080  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`localhost`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=web"
volumes:
  # A. CORE WIKIBASE SUITE SERVICES DATA
  wikibase-image-data:
  mysql-data:
  # B. EXTRA WIKIBASE SUITE SERVICES DATA
  wdqs-data:
  elasticsearch-data:
  quickstatements-data:
