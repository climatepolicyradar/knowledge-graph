name: ci
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install poetry
        shell: bash
        run: pipx install poetry==1.8.2

      - name: Install python or load from cache with dependencies
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: poetry install --with dev

      - name: Lint
        run: |
          poetry run pre-commit install
          poetry run pre-commit run --all-files --show-diff-on-failure

      - name: Test
        run: poetry run pytest -v

  deploy_docs:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install poetry
        shell: bash
        run: pipx install poetry==1.8.2

      - name: Install python or load from cache with dependencies
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Deploy docs
        working-directory: ./docs
        run: poetry run mkdocs gh-deploy --force


  deploy_prefect_sandbox:
    if: github.ref == 'refs/heads/main'
    needs: [test]
    uses: ./.github/workflows/prefect_deploy.yml
    with:
      aws-env: sandbox
      pipeline-cache-src-bucket: cpr-sandbox-data-pipeline-cache
      prefect-workspace: ${{ vars.PREFECT_WORKSPACE }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}
      PREFECT_API_KEY: ${{ secrets.PREFECT_API_KEY }}
