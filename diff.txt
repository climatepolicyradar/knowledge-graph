diff --git a/scripts/get_concept.py b/scripts/get_concept.py
index 1447d8c..b220201 100644
--- a/scripts/get_concept.py
+++ b/scripts/get_concept.py
@@ -1,12 +1,10 @@
-import os
 from typing import Annotated
 
 import typer
 from rich.console import Console
 
-import argilla as rg
 from scripts.config import concept_dir
-from src.argilla import dataset_name_to_wikibase_id, dataset_to_labelled_passages
+from src.argilla import get_labelled_passages_from_argilla
 from src.identifiers import WikibaseID
 from src.wikibase import WikibaseSession
 
@@ -30,37 +28,16 @@ def main(
     concept = wikibase.get_concept(wikibase_id)
     console.log(f'🔍 Fetched metadata for "{concept.preferred_label}" from wikibase')
 
-    with console.status("Connecting to Argilla..."):
-        rg.init(
-            api_key=os.getenv("ARGILLA_API_KEY"), api_url=os.getenv("ARGILLA_API_URL")
+    labelled_passages = get_labelled_passages_from_argilla(concept)
+    if labelled_passages:
+        console.log(
+            f"🏷️ Fetched {len(labelled_passages)} labelled passages for {wikibase_id} from Argilla"
+        )
+    else:
+        console.log(
+            f"⚠️ No labelled passages found for {wikibase_id} in Argilla",
+            style="yellow",
         )
-    console.log("✅ Connected to Argilla")
-
-    with console.status("Fetching and filtering datasets from Argilla..."):
-        datasets = rg.list_datasets()
-        if len(datasets) == 0:
-            console.log(
-                "❌ No datasets were returned from Argilla, you may need to be "
-                "granted access to the workspace(s)"
-            )
-
-        for dataset in datasets:
-            try:
-                # if the dataset.name ends with our wikibase_id, then it's one we want to process
-                if dataset_name_to_wikibase_id(dataset.name) == wikibase_id:
-                    console.log(
-                        f'🕵️  Found "{dataset.name}" in the "{dataset.workspace.name}" workspace'
-                    )
-                    concept.labelled_passages = dataset_to_labelled_passages(dataset)
-                    console.log(
-                        f"📚 Found {len(concept.labelled_passages)} labelled passages"
-                    )
-                    break
-            except ValueError:
-                continue
-
-    if not concept.labelled_passages:
-        console.log(f"❌ No labelled passages found for {wikibase_id}")
 
     # Save the concept to disk
     output_path = concept_dir / f"{wikibase_id}.json"
diff --git a/src/argilla.py b/src/argilla.py
index da561af..5ffec1d 100644
--- a/src/argilla.py
+++ b/src/argilla.py
@@ -1,11 +1,23 @@
+import os
+
+import argilla as rg
+from argilla import SpanQuestion, TextField
 from argilla.feedback import FeedbackDataset, FeedbackRecord
-from argilla.feedback.fields import TextField
-from argilla.feedback.questions import SpanQuestion
 from src.identifiers import WikibaseID
 from src.labelled_passage import LabelledPassage
 from src.wikibase import Concept
 
 
+def init_argilla_client(func):
+    def wrapper(*args, **kwargs):
+        rg.init(
+            api_key=os.getenv("ARGILLA_API_KEY"), api_url=os.getenv("ARGILLA_API_URL")
+        )
+        return func(*args, **kwargs)
+
+    return wrapper
+
+
 def concept_to_dataset_name(concept: Concept) -> str:
     return f"{concept.preferred_label}-{concept.wikibase_id}".replace(" ", "-")
 
@@ -30,10 +42,10 @@ def labelled_passages_to_feedback_dataset(
     dataset = FeedbackDataset(
         guidelines="Highlight the entity if it is present in the text",
         fields=[
-            TextField(name="text", title="Text", use_markdown=True),
+            TextField(name="text", title="Text", use_markdown=True),  # type: ignore
         ],
         questions=[
-            SpanQuestion(
+            SpanQuestion(  # type: ignore
                 name="entities",
                 labels={concept.wikibase_id: concept.preferred_label},
                 field="text",
@@ -54,3 +66,35 @@ def labelled_passages_to_feedback_dataset(
 
 def dataset_to_labelled_passages(dataset: FeedbackDataset) -> list[LabelledPassage]:
     return [LabelledPassage.from_argilla_record(record) for record in dataset.records]
+
+
+@init_argilla_client
+def get_labelled_passages_from_argilla(concept: Concept) -> list[LabelledPassage]:
+    # First, see whether the dataset exists with the name we expect
+    dataset_name = concept_to_dataset_name(concept)
+    dataset = rg.load(name=dataset_name)
+
+    # If it doesn't exist with the exact name, we can still try to find it by the
+    # wikibase_id. This might happen if the concept has been renamed.
+    if not dataset:
+        datasets = rg.list_datasets()
+        if len(datasets) == 0:
+            raise ValueError(
+                "No datasets were found in Argilla, "
+                "you may need to be granted access to the workspace(s)"
+            )
+        for dataset in datasets:
+            try:
+                # If the dataset.name ends with our wikibase_id, then it's one we want
+                # to process
+                if dataset_name_to_wikibase_id(dataset.name) == concept.wikibase_id:
+                    break
+            except ValueError:
+                continue
+
+    if not dataset:
+        raise ValueError(
+            f'No dataset matching the concept ID "{concept.wikibase_id}" was found in Argilla'
+        )
+
+    return dataset_to_labelled_passages(dataset)
