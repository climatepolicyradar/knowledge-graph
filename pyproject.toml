[tool.poetry]
name = "knowledge-graph"
version = "0.1.0"
description = ""
authors = ["CPR Data Science <dsci@climatepolicyradar.org>"]
license = "Apache 2.0"
readme = "README.md"
packages = [
  { include = "src", from = "." },
  { include = "tests", from = "." },
  { include = "scripts", from = "." },
]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
httpx = "^0.26.0"
rich = "^13.7.0"
tqdm = "^4.66.2"
ipykernel = "^6.29.3"
azure_pdf_parser = { git = "https://github.com/climatepolicyradar/azure-pdf-parser.git", tag = "v0.4.3" }
# navigator_document_parser = { git = "https://github.com/climatepolicyradar/navigator-document-parser.git" }
neomodel = "^5.3.3"
typer = "0.9.4"
rapidfuzz = "^3.10.0"
python-dotenv = "^1.0.1"
hypothesis = "^6.112.2"
more-itertools = "^10.3.0"
argilla = "1.29.1"
prefect = "2.16.8"
griffe = "0.48.0"
cpr-sdk = "^1.7.1"
sentence-transformers = "^3.1.1"
wandb = "^0.18.3"
boto3 = "^1.35.31"

[tool.poetry.scripts]
train = "scripts.train:app"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
mkdocs-material = "^9.5.39"
pre-commit = "^3.8.0"
boto3 = "^1.35.32"
syrupy = "^4.7.1"
moto = {extras = ["s3"], version = "^5.0.16"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
lint.select = ["E", "F", "D", "I"]
line-length = 88
# Docstring Ignores:
# D100 - Missing docstring in public module
# D103 - Missing docstring in public function
# D104 - Missing docstring in public package
# D107 - Missing docstring in __init__
# D202 - No blank lines allowed after function docstring
# D203 - 1 blank line required before class docstring
# D213 - Multi-line docstring summary should start at the first line
# D400 - First line should end with a period
# D401 - First line should be in imperative mood
# D406 - Section name should end with a newline
# D407 - Missing dashed underline after section
# D413 - Missing blank line after last section
# D415 - First line should end with a period, question mark, or exclamation point
lint.ignore = [
  "D100",
  "D103",
  "D104",
  "D107",
  "D202",
  "D203",
  "D212",
  "D400",
  "D401",
  "D406",
  "D407",
  "D413",
  "D415",
  "E501",
]

# Ignore `E402` (import violations) in all `__init__.py` files, and `E501` (line too long) in all files in the `tests` directory
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["E501"]
